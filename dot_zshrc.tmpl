# -*- mode: shell-script; coding: utf-8 -*-

# ================================================================
# env
# ================================================================

# -- emacs keybind
bindkey -e

# -- options
setopt no_beep
setopt hist_ignore_space

# -- locales
export LANG=ja_JP.UTF-8
export LC_COLLATE=ja_JP.UTF-8
export LC_CTYPE=ja_JP.UTF-8
export LC_MESSAGES=ja_JP.UTF-8
export LC_MONETARY=ja_JP.UTF-8
export LC_NUMERIC=ja_JP.UTF-8
export LC_TIME=ja_JP.UTF-8

# -- paths
export GOPATH="$HOME/go"
export VOLTA_HOME="$HOME/.volta"

export PATH="$HOME/.local/bin:$PATH"
export PATH="$HOME/.cargo/bin:$PATH"
export PATH="$GOPATH/bin:$PATH"
export PATH="$VOLTA_HOME/bin:$PATH"

# -- others
export FZF_DEFAULT_OPTS='--height=60% --layout=reverse-list --border'
export LSP_USE_PLISTS=true
export SSH_AUTH_SOCK=$XDG_RUNTIME_DIR/gcr/ssh

{{- if (and (eq .chezmoi.os "linux") (.chezmoi.kernel.osrelease | lower | contains "microsoft")) }}

# -- WSL
export GTK_IM_MODULE=fcitx
export QT_IM_MODULE=fcitx
export XMODIFIERS=@im=fcitx
export DefaultIMModule=fcitx
export DISPLAY="$(cat /etc/resolv.conf | grep nameserver | awk '{print $2}'):0.0"

if ! pgrep -f ssh-agent >/dev/null; then
  ssh-agent -s > "$HOME/.ssh-agent.env"
fi
eval `cat "$HOME/.ssh-agent.env"` >/dev/null
{{- end }}

# ================================================================
# Zinit
# ================================================================

function init-zeno() {
  export ZENO_COMPLETION_FALLBACK=fzf-tab-complete

  bindkey ' '  zeno-auto-snippet
  bindkey '^]' zeno-ghq-cd
  bindkey '^i' zeno-completion
  bindkey '^m' zeno-auto-snippet-and-accept-line
  bindkey '^r' zeno-history-selection
  bindkey '^x' zeno-insert-snippet
}

# -- Zinit - https://github.com/zdharma-continuum/zinit
source "$HOME/.zinit/bin/zinit.zsh"

zinit snippet PZT::modules/history/init.zsh
zinit light Aloxaf/fzf-tab
zinit light Tarrasch/zsh-bd

zinit wait lucid light-mode for \
  atload"init-zeno" depth"1" blockf  yuki-yano/zeno.zsh \
  atinit"ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay" z-shell/F-Sy-H \
  blockf zsh-users/zsh-completions \
  atload"!_zsh_autosuggest_start" zsh-users/zsh-autosuggestions

# ================================================================
# utilities
# ================================================================

# -- Heroku
if (( $+commands[heroku] )); then
  # echo "$(heroku autocomplete:script zsh)"
  HEROKU_AC_ZSH_SETUP_PATH=$HOME/.cache/heroku/autocomplete/zsh_setup
  test -f $HEROKU_AC_ZSH_SETUP_PATH && source $HEROKU_AC_ZSH_SETUP_PATH;
fi

# -- Starship :: https://starship.rs/
if (( $+commands[starship] )); then
  eval "$(starship init zsh)"
fi

# -- Zoxide :: https://github.com/ajeetdsouza/zoxide
if (( $+commands[zoxide] )); then
  eval "$(zoxide init zsh --cmd j)"
fi

# -- mise :: https://github.com/jdx/mise
if (( $+commands[mise] )); then
  eval "$(mise activate zsh --shims)"
  eval "$(mise completion zsh)"
fi

# THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
# export SDKMAN_DIR="$HOME/.sdkman"
# [[ -s "$HOME/.sdkman/bin/sdkman-init.sh" ]] && source "$HOME/.sdkman/bin/sdkman-init.sh"

# ================================================================
# custom
# ================================================================

alias e="emacs & disown"
alias doom="$HOME/.config/doomemacs/bin/doom"
alias doomemacs="emacs --init-directory $HOME/.config/doomemacs & disown"
alias spacemacs="emacs --init-directory $HOME/.config/spacemacs & disown"
alias ll="lsd -l"
